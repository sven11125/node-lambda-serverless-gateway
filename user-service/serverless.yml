service: user-service
frameworkVersion: "3"

plugins:
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs14.x
  region: ${file(../serverless-config.json):region}
  apiGateway:
    apiKeys:
      - defaultKey
  environment:
    DYNAMODB_USER_TABLE: "near-users"
    DYNAMODB_WALLET_TABLE: "near-wallets"
    DYNAMODB_OTP_TABLE: "near-otp"
    OTP_EXPIRY_IN_SECONDS: 900
    TOKEN_EXPIRY_IN_MILLISECONDS: 300000
    REFRESH_TOKEN_EXPIRY_IN_MILLISECONDS: 300000
    HASH_KEY_EXPIRY_IN_MILLISECONDS: 900
    SECRET_KEY: ""
    REFRESH_SECRET_KEY: ""
    KYC_REQUIRED_AFTER_DAYS: 90
    FROM_EMAIL_ADDRESS: ""
    REPLY_TO_EMAIL_ADDRESS: ""
    WALLET_API_ENDPOINT: ""
    CRYPTO_ALGORITHM: "aes-256-ctr" 
    CRYPTO_KEY: ""
    CRYPTO_IV: ""
    APP_DOMAIN: "http://localhost:3000/email-verification"
    IS_OFFLINE: false
  httpApi:
    id: !ImportValue NearGatewayHttpApiId
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "sns:Publish"
          Resource:
            "*"
        - Effect: "Allow"
          Action:
            - "dynamodb:Query"
            - "dynamodb:Scan"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:GetItem"
            - "dynamodb:BatchGetItem"
            - "dynamodb:BatchWriteItem"
            - "ssm:DescribeParameters"
            - "ssm:GetParameter"
            - "ssm:GetParameters"
            - "ses:SendEmail"
            - "ses:SendRawEmail"
          Resource:
            - "arn:aws:dynamodb:*:*:*"
            - "arn:aws:dynamodb:*:*:*/*/index/*"
            - "arn:aws:ssm:*"
            - "arn:aws:ses:*"            

functions:
  create-user:
    handler: register.handler
    events:
      - httpApi:
          path: /users
          method: post

  login-user:
    handler: login.handler
    events:
      - httpApi:
          path: /users/login
          method: post

  verify-user:
    handler: verify.handler
    events:
      - httpApi:
          path: /users/login/verify
          method: post

  verify-OPT:
    handler: verifyOTP.handler
    events:
      - httpApi:
          path: /users/otp/verify
          method: post

# custom:
#    dynamodb:
#      stages:
#        - dev
#      start:
#        port: 8000
#        inMemory: false
#        migrate: true

# resources:
#    Resources:
#      userTable:
#        Type: AWS::DynamoDB::Table
#        Properties:
#          TableName: near-users
#          AttributeDefinitions:
#            - AttributeName: userId
#              AttributeType: S
#          KeySchema:
#            - AttributeName: userId
#              KeyType: HASH
#          ProvisionedThroughput:
#            ReadCapacityUnits: 1
#            WriteCapacityUnits: 1
#      walletsTable:
#        Type: AWS::DynamoDB::Table
#        Properties:
#          TableName: near-wallets
#          AttributeDefinitions:
#            - AttributeName: walletId
#              AttributeType: S
#            - AttributeName: walletName
#              AttributeType: S
#          KeySchema:
#            - AttributeName: walletId
#              KeyType: HASH
#          GlobalSecondaryIndexes:
#            - IndexName: WalletNameIndex
#              KeySchema:
#                - AttributeName: walletName
#                  KeyType: HASH
#                - AttributeName: walletId
#                  KeyType: RANGE
#              ProvisionedThroughput:
#                ReadCapacityUnits: 1
#                WriteCapacityUnits: 1
#              Projection:
#                ProjectionType: 'ALL'
#          ProvisionedThroughput:
#            ReadCapacityUnits: 1
#            WriteCapacityUnits: 1
